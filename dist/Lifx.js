function Lifx(e){const t=this;if(t.base_url="https://api.lifx.com/v1/",t.token=e,!t.token)throw"An API Authorization token is required. See: https://api.developer.lifx.com/docs/authentication";const r=function(e){e=e||{};for(var t=1;t<arguments.length;t++)if(arguments[t])for(var r in arguments[t])arguments[t].hasOwnProperty(r)&&(e[r]=arguments[t][r]);return e};t.api={},t.api.call=function(e,r,s,o){if(r=r.replace(/^(\/)/,""),s=s||{},o="string"==typeof o?o:"lights/","object"==typeof s)for(var n in s)s[n]||delete s[n];return function(e,r,s){return new Promise((o,n)=>{let a=new XMLHttpRequest;a.open(e.toUpperCase(),r,!0),a.setRequestHeader("Authorization","Bearer "+t.token),a.setRequestHeader("Content-type","application/json; charset=utf-8"),a.onload=(()=>{a.status>=200&&a.status<400?o(JSON.parse(a.responseText)):n(JSON.parse(a.responseText))}),a.onerror=(()=>{n(JSON.parse(a.responseText))}),a.send(JSON.stringify(s||{}))})}(e,t.base_url+(o.trim()?o:"/")+r,s)},t.api.post=function(e,r,s){return t.api.call("post",e,r,s)},t.api.get=function(e,r,s){return t.api.call("get",e,r,s)},t.api.put=function(e,r,s){return t.api.call("put",e,r,s)};const s=e=>((e="string"==typeof e?e:"all").replace(/^(\/)/,"").replace(/$(\/)/,""),e);t.list_lights=(e=>(e=s(e),t.api.get(e))),t.set_state=((e,o)=>{e=s(e);let n=r({power:"",color:"",brightness:null,duration:null,infrared:null},o||{});return t.api.put(e+"/state",n)}),t.set_states=((e,r)=>t.api.put("states",{states:e||[],defaults:r||{}})),t.state_delta=(e=>{throw e=s(e),"This function is currently not available."}),t.toggle_power=((e,o)=>{e=s(e);let n=r({duration:null},o||{});return t.api.post(e+"/toggle",n)}),t.breath_effect=((e,o)=>{e=s(e);let n=r({color:"",from_color:"",period:null,cycles:null,persist:!1,power_on:!0,peak:null},o||{});return t.api.post(e+"/effects/breathe",n)}),t.pulse_effect=((e,o)=>{e=s(e);let n=r({color:"",from_color:"",period:null,cycles:null,persist:!1,power_on:!0},o||{});return t.api.post(e+"/effects/pulse",n)}),t.cycle=((e,o)=>{e=s(e);let n=r({states:[],defaults:{},direction:"forward"},o||{});return t.api.post(e+"/cycle",n)}),t.list_scenes=(()=>t.api.get("scenes",!1,"")),t.activate_scene=((e,s)=>{let o=r({duration:null,ignore:[],overrides:{}},s||{});return t.api.put("scenes/"+e+"/activate",o,"")}),t.validate_color=(e=>t.api.get("color",{string:e},"")),t.set_color=((e,r,s,o)=>t.set_state(e,{color:"hue:"+r+" saturation:"+s+" kelvin:3500"+(o?" brightness:"+o:"")})),t.set_white=((e,r,s)=>t.set_state(e,{color:"hue:0.0 saturation:0.0 kelvin:"+r+(s?" brightness:"+s:"")}))}